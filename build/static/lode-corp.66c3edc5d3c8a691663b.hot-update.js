webpackHotUpdate("lode-corp",{

/***/ "./packages/mars-theme/src/components/module-hero.js":
/*!***********************************************************!*\
  !*** ./packages/mars-theme/src/components/module-hero.js ***!
  \***********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./link */ \"./packages/mars-theme/src/components/link.js\");\n/* harmony import */ var _nav__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nav */ \"./packages/mars-theme/src/components/nav.js\");\n/* harmony import */ var _download_buttons__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./download-buttons */ \"./packages/mars-theme/src/components/download-buttons.js\");\n/* harmony import */ var _menu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./menu */ \"./packages/mars-theme/src/components/menu.js\");\n/* harmony import */ var react_i18next__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-i18next */ \"./node_modules/react-i18next/dist/es/index.js\");\n/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-responsive */ \"./node_modules/react-responsive/dist/react-responsive.js\");\n/* harmony import */ var react_responsive__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_responsive__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _i18n__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./i18n */ \"./packages/mars-theme/src/components/i18n.js\");\n/* harmony import */ var _img_logo_svg__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../img/logo.svg */ \"./packages/mars-theme/src/img/logo.svg\");\n/* harmony import */ var _img_logo_svg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_img_logo_svg__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _img_home_hero_bg_jpg__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../img/home-hero-bg.jpg */ \"./packages/mars-theme/src/img/home-hero-bg.jpg\");\n/* harmony import */ var _img_home_hero_bg_jpg__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_img_home_hero_bg_jpg__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _img_play_svg__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../img/play.svg */ \"./packages/mars-theme/src/img/play.svg\");\n/* harmony import */ var _img_play_svg__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_img_play_svg__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _img_hero_background_mobile_jpg__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../img/hero-background-mobile.jpg */ \"./packages/mars-theme/src/img/hero-background-mobile.jpg\");\n/* harmony import */ var _img_hero_background_mobile_jpg__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_img_hero_background_mobile_jpg__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _img_hero_wallet_mobile_png__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../img/hero-wallet-mobile.png */ \"./packages/mars-theme/src/img/hero-wallet-mobile.png\");\n/* harmony import */ var _img_hero_wallet_mobile_png__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_img_hero_wallet_mobile_png__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}/* Images *//* Breakpoints */var breakpoints=[576,768,1320,1720];var mq=breakpoints.map(bp=>\"@media (max-width: \".concat(bp,\"px)\"));var Header=(_ref)=>{var{state}=_ref;var{t,i18n}=Object(react_i18next__WEBPACK_IMPORTED_MODULE_7__[\"useTranslation\"])();var mobileVw=Object(react_responsive__WEBPACK_IMPORTED_MODULE_8__[\"useMediaQuery\"])({query:'(max-device-width:1319px)'});/* Mobile View */return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(\"div\",null,mobileVw&&Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(MobileHeroContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(TextMobileWrapper,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(MenuContainer,null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Container,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Title,null,\"The \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(\"b\",null,\"future\"),\" of money starts here\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(P,null,\"Welcome to the birthplace of the \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(\"b\",null,\"Honest Money Revolution.\"),\" Fueled by a global monetary system that empowers you with:\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Pm,null,\"\\u2022 \",t(\"home.hero.sub1\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Pm,null,\"\\u2022 \",t(\"home.hero.sub2\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Pm,null,\"\\u2022 \",t(\"home.hero.sub3\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Row,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(MarginTop,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(PrimaryButton,null,t(\"home.hero.start\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(PlayButton,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(PlaySVG,{src:_img_play_svg__WEBPACK_IMPORTED_MODULE_12___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(PlayButtonLabel,null,t(\"home.hero.videos\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(PlayButtonNotifications,null,\"3\")))))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(DownloadMobileWrapper,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_download_buttons__WEBPACK_IMPORTED_MODULE_5__[\"default\"],null))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(HeroContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(MenuContainer,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(LodeLogo,{src:_img_logo_svg__WEBPACK_IMPORTED_MODULE_10___default.a,className:\"logo\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Container,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Title,null,\"The \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(\"b\",null,\"future\"),\" of money starts here\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(P,null,\"Welcome to the birthplace of the \",Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(\"b\",null,\"Honest Money Revolution.\"),\" Fueled by a global monetary system that empowers you with:\"),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Pm,null,\"\\u2022 \",t(\"home.hero.sub1\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Pm,null,\"\\u2022 \",t(\"home.hero.sub2\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Pm,null,\"\\u2022 \",t(\"home.hero.sub3\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(Row,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(MarginTop,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(PrimaryButton,null,t(\"home.hero.start\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(PlayButton,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(PlaySVG,{src:_img_play_svg__WEBPACK_IMPORTED_MODULE_12___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(PlayButtonLabel,null,t(\"home.hero.videos\")),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(PlayButtonNotifications,null,\"3\")))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_15__[\"jsx\"])(_download_buttons__WEBPACK_IMPORTED_MODULE_5__[\"default\"],null))));};// Connect the Header component to get access to the `state` in it's `props`\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Header));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt0\",label:\"Container\"})(\"width:848px;max-width:100%;box-sizing:border-box;padding:24px;color:#314452;display:flex;flex-direction:column;justify-content:space-around;\",mq[2],\"{padding:0;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var Title=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt1\",label:\"Title\"})(\"font-size:70px;max-width:600px;margin-top:200px;\",mq[2],\"{margin-top:100px;font-size:60px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var TextMobileWrapper=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt2\",label:\"TextMobileWrapper\"})(\"padding-left:100px;padding-right:100px;\",mq[1],\"{padding-left:50px;padding-right:50px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var P=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"p\",{target:\"eq6nmdt3\",label:\"P\"})( false?undefined:{name:\"1vsaq1e\",styles:\"max-width:590px;font-size:20px;line-height:35px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Pm=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"p\",{target:\"eq6nmdt4\",label:\"Pm\"})( false?undefined:{name:\"x68p09\",styles:\"max-width:590px;font-size:20px;line-height:35px;margin:0px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var PrimaryButton=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"button\",{target:\"eq6nmdt5\",label:\"PrimaryButton\"})( false?undefined:{name:\"1wmza22\",styles:\"background:#36AAFF;color:white;border:none;border-radius:30px;padding:18px 44px;max-width:200px;font-weight:500;font-size:20px;box-shadow:0px 20px 20px #48484860;cursor:pointer;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var PlayButton=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"button\",{target:\"eq6nmdt6\",label:\"PlayButton\"})( false?undefined:{name:\"c4j0w\",styles:\"border:none;border-radius:30px;width:60px;height:60px;background:white;box-shadow:0px 20px 20px #48484860;margin-left:30px;position:relative;cursor:pointer;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcSm9lbHNcXERvY3VtZW50c1xcQXRvbWljNDdcXExPREVcXExPREUgSG9tZXBhZ2VcXGZyb250aXR5XFxsb2RlLWNvcnBcXHBhY2thZ2VzXFxtYXJzLXRoZW1lXFxzcmNcXGNvbXBvbmVudHNcXG1vZHVsZS1oZXJvLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBJZ0MiLCJmaWxlIjoiQzpcXFVzZXJzXFxKb2Vsc1xcRG9jdW1lbnRzXFxBdG9taWM0N1xcTE9ERVxcTE9ERSBIb21lcGFnZVxcZnJvbnRpdHlcXGxvZGUtY29ycFxccGFja2FnZXNcXG1hcnMtdGhlbWVcXHNyY1xcY29tcG9uZW50c1xcbW9kdWxlLWhlcm8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBMaW5rIGZyb20gXCIuL2xpbmtcIjtcbmltcG9ydCBOYXYgZnJvbSBcIi4vbmF2XCI7XG5pbXBvcnQgRG93bmxvYWRCdXR0b25zIGZyb20gXCIuL2Rvd25sb2FkLWJ1dHRvbnNcIjtcbmltcG9ydCBNb2JpbGVNZW51IGZyb20gXCIuL21lbnVcIjtcbmltcG9ydCB7IHVzZVRyYW5zbGF0aW9uIH0gZnJvbSAncmVhY3QtaTE4bmV4dCc7XG5pbXBvcnQge3VzZU1lZGlhUXVlcnl9IGZyb20gJ3JlYWN0LXJlc3BvbnNpdmUnO1xuaW1wb3J0ICcuL2kxOG4nO1xuXG4vKiBJbWFnZXMgKi9cbmltcG9ydCBsb2RlTG9nbyBmcm9tIFwiLi4vaW1nL2xvZ28uc3ZnXCJcbmltcG9ydCBob21lSGVyb0JnIGZyb20gXCIuLi9pbWcvaG9tZS1oZXJvLWJnLmpwZ1wiXG5pbXBvcnQgcGxheVNWRyBmcm9tIFwiLi4vaW1nL3BsYXkuc3ZnXCJcbmltcG9ydCBoZXJvQmdNb2JpbGUgZnJvbSBcIi4uL2ltZy9oZXJvLWJhY2tncm91bmQtbW9iaWxlLmpwZ1wiXG5pbXBvcnQgaGVyb0FwcE1vYmlsZSBmcm9tIFwiLi4vaW1nL2hlcm8td2FsbGV0LW1vYmlsZS5wbmdcIlxuXG4vKiBCcmVha3BvaW50cyAqL1xuY29uc3QgYnJlYWtwb2ludHMgPSBbNTc2LCA3NjgsIDEzMjAsIDE3MjBdO1xuY29uc3QgbXEgPSBicmVha3BvaW50cy5tYXAoXG4gIGJwID0+IGBAbWVkaWEgKG1heC13aWR0aDogJHticH1weClgXG4pXG5cbmNvbnN0IEhlYWRlciA9ICh7IHN0YXRlIH0pID0+IHtcbiAgY29uc3QgeyB0LCBpMThuIH0gPSB1c2VUcmFuc2xhdGlvbigpO1xuICBjb25zdCBtb2JpbGVWdyA9IHVzZU1lZGlhUXVlcnkoeyBxdWVyeTogJyhtYXgtZGV2aWNlLXdpZHRoOjEzMTlweCknfSlcbiAgICAvKiBNb2JpbGUgVmlldyAqL1xuICAgIHJldHVybiggXG4gICAgICA8ZGl2PlxuICAgICAgICB7bW9iaWxlVncgJiYgXG4gICAgICAgIDxNb2JpbGVIZXJvQ29udGFpbmVyPlxuICAgICAgICAgIDxUZXh0TW9iaWxlV3JhcHBlcj5cbiAgICAgICAgICAgIDxNZW51Q29udGFpbmVyIC8+XG4gICAgICAgICAgPENvbnRhaW5lcj5cbiAgICAgICAgICAgIDxUaXRsZT5UaGUgPGI+ZnV0dXJlPC9iPiBvZiBtb25leSBzdGFydHMgaGVyZTwvVGl0bGU+XG4gICAgICAgICAgICA8UD5XZWxjb21lIHRvIHRoZSBiaXJ0aHBsYWNlIG9mIHRoZSA8Yj5Ib25lc3QgTW9uZXkgUmV2b2x1dGlvbi48L2I+IEZ1ZWxlZCBieSBhIGdsb2JhbCBtb25ldGFyeSBzeXN0ZW0gdGhhdCBlbXBvd2VycyB5b3Ugd2l0aDo8L1A+XG4gICAgICAgICAgICA8UG0+4oCiIHt0KFwiaG9tZS5oZXJvLnN1YjFcIil9PC9QbT5cbiAgICAgICAgICAgIDxQbT7igKIge3QoXCJob21lLmhlcm8uc3ViMlwiKX08L1BtPlxuICAgICAgICAgICAgPFBtPuKAoiB7dChcImhvbWUuaGVyby5zdWIzXCIpfTwvUG0+XG4gICAgICAgICAgICA8Um93PlxuICAgICAgICAgICAgICA8TWFyZ2luVG9wPlxuICAgICAgICAgICAgICA8UHJpbWFyeUJ1dHRvbj57dChcImhvbWUuaGVyby5zdGFydFwiKX08L1ByaW1hcnlCdXR0b24+XG4gICAgICAgICAgICAgIDxQbGF5QnV0dG9uPjxQbGF5U1ZHIHNyYz17cGxheVNWR30gLz48UGxheUJ1dHRvbkxhYmVsPnt0KFwiaG9tZS5oZXJvLnZpZGVvc1wiKX08L1BsYXlCdXR0b25MYWJlbD48UGxheUJ1dHRvbk5vdGlmaWNhdGlvbnM+MzwvUGxheUJ1dHRvbk5vdGlmaWNhdGlvbnM+PC9QbGF5QnV0dG9uPlxuICAgICAgICAgICAgICA8L01hcmdpblRvcD5cbiAgICAgICAgICAgIDwvUm93PlxuICAgICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgICAgIDwvVGV4dE1vYmlsZVdyYXBwZXI+XG4gICAgICAgICAgPERvd25sb2FkTW9iaWxlV3JhcHBlcj5cbiAgICAgICAgICAgICAgPERvd25sb2FkQnV0dG9ucyAvPlxuICAgICAgICAgIDwvRG93bmxvYWRNb2JpbGVXcmFwcGVyPlxuICAgICAgPC9Nb2JpbGVIZXJvQ29udGFpbmVyPiB9XG4gICAgICA8SGVyb0NvbnRhaW5lcj5cbiAgICAgICAgPE1lbnVDb250YWluZXI+XG4gICAgICAgICAgPExvZGVMb2dvIHNyYz17bG9kZUxvZ299IGNsYXNzTmFtZT1cImxvZ29cIiAvPlxuICAgICAgICA8L01lbnVDb250YWluZXI+IFxuICAgICAgICA8Q29udGFpbmVyPlxuICAgICAgICAgIDxUaXRsZT5UaGUgPGI+ZnV0dXJlPC9iPiBvZiBtb25leSBzdGFydHMgaGVyZTwvVGl0bGU+XG4gICAgICAgICAgPFA+V2VsY29tZSB0byB0aGUgYmlydGhwbGFjZSBvZiB0aGUgPGI+SG9uZXN0IE1vbmV5IFJldm9sdXRpb24uPC9iPiBGdWVsZWQgYnkgYSBnbG9iYWwgbW9uZXRhcnkgc3lzdGVtIHRoYXQgZW1wb3dlcnMgeW91IHdpdGg6PC9QPlxuICAgICAgICAgIDxQbT7igKIge3QoXCJob21lLmhlcm8uc3ViMVwiKX08L1BtPlxuICAgICAgICAgIDxQbT7igKIge3QoXCJob21lLmhlcm8uc3ViMlwiKX08L1BtPlxuICAgICAgICAgIDxQbT7igKIge3QoXCJob21lLmhlcm8uc3ViM1wiKX08L1BtPlxuICAgICAgICAgIDxSb3c+XG4gICAgICAgICAgICA8TWFyZ2luVG9wPlxuICAgICAgICAgICAgPFByaW1hcnlCdXR0b24+e3QoXCJob21lLmhlcm8uc3RhcnRcIil9PC9QcmltYXJ5QnV0dG9uPlxuICAgICAgICAgICAgPFBsYXlCdXR0b24+PFBsYXlTVkcgc3JjPXtwbGF5U1ZHfSAvPjxQbGF5QnV0dG9uTGFiZWw+e3QoXCJob21lLmhlcm8udmlkZW9zXCIpfTwvUGxheUJ1dHRvbkxhYmVsPjxQbGF5QnV0dG9uTm90aWZpY2F0aW9ucz4zPC9QbGF5QnV0dG9uTm90aWZpY2F0aW9ucz48L1BsYXlCdXR0b24+XG4gICAgICAgICAgICA8L01hcmdpblRvcD5cbiAgICAgICAgICA8L1Jvdz5cbiAgICAgICAgICA8RG93bmxvYWRCdXR0b25zIC8+XG4gICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgPC9IZXJvQ29udGFpbmVyPlxuICAgIDwvZGl2PiApXG59O1xuXG4vLyBDb25uZWN0IHRoZSBIZWFkZXIgY29tcG9uZW50IHRvIGdldCBhY2Nlc3MgdG8gdGhlIGBzdGF0ZWAgaW4gaXQncyBgcHJvcHNgXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEhlYWRlcik7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiA4NDhweDtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAyNHB4O1xuICBjb2xvcjogIzMxNDQ1MjtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICR7bXFbMl19IHtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG5gO1xuXG5jb25zdCBUaXRsZSA9IHN0eWxlZC5kaXZgXG5mb250LXNpemU6IDcwcHg7XG5tYXgtd2lkdGg6IDYwMHB4O1xubWFyZ2luLXRvcDogMjAwcHg7XG4ke21xWzJdfSB7XG4gIG1hcmdpbi10b3A6IDEwMHB4O1xuICBmb250LXNpemU6IDYwcHg7XG59XG5gO1xuXG5cbmNvbnN0IFRleHRNb2JpbGVXcmFwcGVyID0gc3R5bGVkLmRpdmBcbiAgcGFkZGluZy1sZWZ0OiAxMDBweDtcbiAgcGFkZGluZy1yaWdodDoxMDBweDtcbiAgJHttcVsxXX0ge1xuICAgIHBhZGRpbmctbGVmdDogNTBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiA1MHB4O1xuICB9XG5gO1xuXG5jb25zdCBQID0gc3R5bGVkLnBgXG4gIG1heC13aWR0aDogNTkwcHg7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbGluZS1oZWlnaHQ6IDM1cHg7XG5gO1xuXG5jb25zdCBQbSA9IHN0eWxlZC5wYFxubWF4LXdpZHRoOiA1OTBweDtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBsaW5lLWhlaWdodDogMzVweDtcbm1hcmdpbjogMHB4O1xuYDtcblxuY29uc3QgUHJpbWFyeUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG5cbmJhY2tncm91bmQ6ICMzNkFBRkY7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAgIHBhZGRpbmc6IDE4cHggNDRweDtcbiAgICBtYXgtd2lkdGg6IDIwMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGJveC1zaGFkb3c6IDBweCAyMHB4IDIwcHggIzQ4NDg0ODYwO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuYDtcblxuY29uc3QgUGxheUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG5cbmJvcmRlcjogbm9uZTtcbmJvcmRlci1yYWRpdXM6IDMwcHg7XG53aWR0aDogNjBweDtcbmhlaWdodDogNjBweDtcbmJhY2tncm91bmQ6IHdoaXRlO1xuYm94LXNoYWRvdzogMHB4IDIwcHggMjBweCAjNDg0ODQ4NjA7XG5tYXJnaW4tbGVmdDogMzBweDtcbnBvc2l0aW9uOiByZWxhdGl2ZTtcbmN1cnNvcjogcG9pbnRlcjtcblxuYDtcblxuY29uc3QgUGxheUJ1dHRvbk5vdGlmaWNhdGlvbnMgPSBzdHlsZWQuZGl2YFxucG9zaXRpb246YWJzb2x1dGU7XG5oZWlnaHQ6IDIwcHg7XG53aWR0aDogMjBweDtcbmJhY2tncm91bmQ6ICMzNkFBRkY7XG50b3A6IDA7XG5sZWZ0OiAwO1xuYm9yZGVyLXJhZGl1czogMzBweDtcbmRpc3BsYXk6IGZsZXg7XG5qdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbmFsaWduLWl0ZW1zOiBjZW50ZXI7XG5jb2xvcjogd2hpdGU7XG5mb250LXNpemU6IDEycHg7XG5gO1xuXG5jb25zdCBQbGF5QnV0dG9uTGFiZWwgPSBzdHlsZWQuZGl2YFxucG9zaXRpb246IGFic29sdXRlO1xuYm90dG9tOiAtMjVweDtcbmxlZnQ6IDVweDtcbmZvbnQtZmFtaWx5OiAnUnViaWsnO1xuICAgIGNvbG9yOiAjNzc3Nzc3O1xuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgbGV0dGVyLXNwYWNpbmc6IDFweDtcbmA7XG5cbmNvbnN0IFBsYXlTVkcgPSBzdHlsZWQuaW1nYFxuXG5wb3NpdGlvbjpyZWxhdGl2ZTtcbmxlZnQ6MnB4O1xuXG5gO1xuXG5jb25zdCBSb3cgPSBzdHlsZWQuZGl2YFxuXG5kaXNwbGF5OiBmbGV4O1xuXG5cbmA7XG5cbmNvbnN0IE1hcmdpblRvcCA9IHN0eWxlZC5kaXZgXG5cbm1hcmdpbi10b3A6IDMwcHg7XG5cbmA7XG5cbmNvbnN0IE1vYmlsZUhlcm9Db250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtoZXJvQmdNb2JpbGV9KTtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMjgwcHggMHB4O1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBmb250LWZhbWlseTogJ1J1YmlrJywgc2Fucy1zZXJpZjtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgbWluLWhlaWdodDogMTE2MHB4O1xuICAke1Jvd30ge1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gIH1cbiAgJHttcVsxXX0ge1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDExMHB4IDEwMHB4O1xuICAgIGJhY2tncm91bmQtc2l6ZTogODAwcHggYXV0bztcbiAgfVxuICAke1RleHRNb2JpbGVXcmFwcGVyfSB7XG4gICAgJHtDb250YWluZXJ9IHtcbiAgICAgICR7VGl0bGV9IHtcbiAgICAgICAgbWFyZ2luLXRvcDogMTcwcHg7XG4gICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG5jb25zdCBIZXJvQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZC1pbWFnZTp1cmwoJHtob21lSGVyb0JnfSk7XG4gIHBhZGRpbmctbGVmdDogMzc1cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDMzMHB4O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA3MCUgMTAwJTtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgZm9udC1mYW1pbHk6ICdSdWJpaycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIG1pbi1oZWlnaHQ6IDExNjBweDtcbiAgJHttcVszXX0ge1xuICAgIHBhZGRpbmctbGVmdDogMTAwcHg7XG4gIH1cbmA7XG5cbmNvbnN0IERvd25sb2FkTW9iaWxlV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gIGhlaWdodDogNjAwcHg7XG4gIG1pbi1oZWlnaHQ6IDY1MHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMDBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7aGVyb0FwcE1vYmlsZX0pO1xuICBiYWNrZ3JvdW5kLXNpemU6IDYwMHB4IGF1dG87XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IC0xMDBweCAwO1xuICBtYXJnaW4tdG9wOiAxMDBweDtcbiAgZGlzcGxheTpmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIHBhZGRpbmctcmlnaHQ6IDEwMHB4O1xuICBwYWRkaW5nLWxlZnQ6IDUwMHB4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gICR7Um93fSB7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgfVxuICAke21xWzJdfSB7XG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgfVxuICAke21xWzFdfSB7XG4gICAgcGFkZGluZy1sZWZ0OiAzMjBweDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDM3MHB4IGF1dG87XG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTUwcHggMDtcbiAgICBoZWlnaHQ6IDQwMHB4O1xuICAgIG1heC1oZWlnaHQ6IDQwMHB4O1xuICAgIG1pbi1oZWlnaHQ6IGluaXRpYWw7XG4gICAgbWFyZ2luLXRvcDogMTAwcHg7XG4gIH1cbiAgJHttcVswXX0ge1xuICAgIHBhZGRpbmctbGVmdDogMjBweDtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDBweDtcbiAgfVxuYDtcblxuY29uc3QgTG9kZUxvZ28gPSBzdHlsZWQuaW1nYFxuICAke21xWzJdfSB7XG4gICAgbWF4LXdpZHRoOiAyNXZ3O1xuICB9XG5gO1xuXG5jb25zdCBNZWRpdW1UZXh0ID0gc3R5bGVkLmRpdmBcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZGlzcGxheTogaW5saW5lO1xuYDtcblxuY29uc3QgTWVudUNvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgcGFkZGluZy10b3A6IDYwcHg7XG5gO1xuXG5jb25zdCBNZW51ID0gc3R5bGVkLmRpdmBcblxuYDtcblxuY29uc3QgTWVudUJ1dHRvbiA9IHN0eWxlZC5idXR0b25gXG5cbmA7XG5cblxuXG5cbmNvbnN0IERlc2NyaXB0aW9uID0gc3R5bGVkLmg0YFxuICBtYXJnaW46IDA7XG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XG5gO1xuXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var PlayButtonNotifications=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt7\",label:\"PlayButtonNotifications\"})( false?undefined:{name:\"qbsz0l\",styles:\"position:absolute;height:20px;width:20px;background:#36AAFF;top:0;left:0;border-radius:30px;display:flex;justify-content:center;align-items:center;color:white;font-size:12px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var PlayButtonLabel=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt8\",label:\"PlayButtonLabel\"})( false?undefined:{name:\"pms0dy\",styles:\"position:absolute;bottom:-25px;left:5px;font-family:'Rubik';color:#777777;font-weight:500;letter-spacing:1px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var PlaySVG=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"img\",{target:\"eq6nmdt9\",label:\"PlaySVG\"})( false?undefined:{name:\"1vnwd2p\",styles:\"position:relative;left:2px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Row=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt10\",label:\"Row\"})( false?undefined:{name:\"k008qs\",styles:\"display:flex;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var MarginTop=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt11\",label:\"MarginTop\"})( false?undefined:{name:\"46b038\",styles:\"margin-top:30px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var MobileHeroContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt12\",label:\"MobileHeroContainer\"})(\"background-image:url(\",_img_hero_background_mobile_jpg__WEBPACK_IMPORTED_MODULE_13___default.a,\");background-position:280px 0px;background-repeat:no-repeat;font-family:'Rubik',sans-serif;font-weight:300;min-height:1160px;\",Row,\"{flex-direction:row;}\",mq[1],\"{background-position:110px 100px;background-size:800px auto;}\",TextMobileWrapper,\"{\",Container,\"{\",Title,\"{margin-top:170px;}}}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var HeroContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt13\",label:\"HeroContainer\"})(\"background-image:url(\",_img_home_hero_bg_jpg__WEBPACK_IMPORTED_MODULE_11___default.a,\");padding-left:375px;padding-right:330px;background-position:70% 100%;background-repeat:no-repeat;font-family:'Rubik',sans-serif;font-weight:300;min-height:1160px;\",mq[3],\"{padding-left:100px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var DownloadMobileWrapper=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt14\",label:\"DownloadMobileWrapper\"})(\"height:600px;min-height:650px;margin-bottom:300px;background-image:url(\",_img_hero_wallet_mobile_png__WEBPACK_IMPORTED_MODULE_14___default.a,\");background-size:600px auto;background-repeat:no-repeat;background-position:-100px 0;margin-top:100px;display:flex;justify-content:flex-start;padding-right:100px;padding-left:500px;align-items:center;align-content:center;\",Row,\"{flex-direction:row;}\",mq[2],\"{margin-bottom:50px;}\",mq[1],\"{padding-left:320px;background-size:370px auto;background-position:-50px 0;height:400px;max-height:400px;min-height:initial;margin-top:100px;}\",mq[0],\"{padding-left:20px;background-position:100px;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var LodeLogo=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"img\",{target:\"eq6nmdt15\",label:\"LodeLogo\"})(mq[2],\"{max-width:25vw;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var MediumText=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt16\",label:\"MediumText\"})( false?undefined:{name:\"1dmwf73\",styles:\"font-weight:500;display:inline;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var MenuContainer=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt17\",label:\"MenuContainer\"})( false?undefined:{name:\"1tlz5xf\",styles:\"display:flex;justify-content:space-between;padding-top:60px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Menu=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"eq6nmdt18\",label:\"Menu\"})( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var MenuButton=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"button\",{target:\"eq6nmdt19\",label:\"MenuButton\"})( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\");var Description=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h4\",{target:\"eq6nmdt20\",label:\"Description\"})( false?undefined:{name:\"8zl75p\",styles:\"margin:0;color:rgba(255,255,255,0.7);\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/mars-theme/src/components/module-hero.js\n");

/***/ })

})